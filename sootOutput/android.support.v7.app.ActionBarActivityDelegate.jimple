abstract class android.support.v7.app.ActionBarActivityDelegate extends java.lang.Object
{
    static final java.lang.String METADATA_UI_OPTIONS;
    private static final java.lang.String TAG;
    static final java.lang.String UIOPTION_SPLIT_ACTION_BAR_WHEN_NARROW;
    private android.support.v7.app.ActionBar mActionBar;
    final android.support.v7.app.ActionBarActivity mActivity;
    private boolean mEnableDefaultActionBarUp;
    boolean mHasActionBar;
    private android.view.MenuInflater mMenuInflater;
    boolean mOverlayActionBar;

    void <init>(android.support.v7.app.ActionBarActivity)
    {
        android.support.v7.app.ActionBarActivityDelegate $r0;
        android.support.v7.app.ActionBarActivity $r1;

        $r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        $r1 := @parameter0: android.support.v7.app.ActionBarActivity;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity> = $r1;

        return;
    }

    static android.support.v7.app.ActionBarActivityDelegate createDelegate(android.support.v7.app.ActionBarActivity)
    {
        android.support.v7.app.ActionBarActivity $r0;
        int $i0;
        android.support.v7.app.ActionBarActivityDelegateApi20 r2;
        android.support.v7.app.ActionBarActivityDelegateJBMR2 r3;
        android.support.v7.app.ActionBarActivityDelegateJB r4;
        android.support.v7.app.ActionBarActivityDelegateICS r5;
        android.support.v7.app.ActionBarActivityDelegateHC r6;
        android.support.v7.app.ActionBarActivityDelegateBase r7;

        $r0 := @parameter0: android.support.v7.app.ActionBarActivity;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 20 goto label1;

        r2 = new android.support.v7.app.ActionBarActivityDelegateApi20;

        specialinvoke r2.<android.support.v7.app.ActionBarActivityDelegateApi20: void <init>(android.support.v7.app.ActionBarActivity)>($r0);

        return r2;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label2;

        r3 = new android.support.v7.app.ActionBarActivityDelegateJBMR2;

        specialinvoke r3.<android.support.v7.app.ActionBarActivityDelegateJBMR2: void <init>(android.support.v7.app.ActionBarActivity)>($r0);

        return r3;

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label3;

        r4 = new android.support.v7.app.ActionBarActivityDelegateJB;

        specialinvoke r4.<android.support.v7.app.ActionBarActivityDelegateJB: void <init>(android.support.v7.app.ActionBarActivity)>($r0);

        return r4;

     label3:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label4;

        r5 = new android.support.v7.app.ActionBarActivityDelegateICS;

        specialinvoke r5.<android.support.v7.app.ActionBarActivityDelegateICS: void <init>(android.support.v7.app.ActionBarActivity)>($r0);

        return r5;

     label4:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label5;

        r6 = new android.support.v7.app.ActionBarActivityDelegateHC;

        specialinvoke r6.<android.support.v7.app.ActionBarActivityDelegateHC: void <init>(android.support.v7.app.ActionBarActivity)>($r0);

        return r6;

     label5:
        r7 = new android.support.v7.app.ActionBarActivityDelegateBase;

        specialinvoke r7.<android.support.v7.app.ActionBarActivityDelegateBase: void <init>(android.support.v7.app.ActionBarActivity)>($r0);

        return r7;
    }

    abstract void addContentView(android.view.View, android.view.ViewGroup$LayoutParams);

    abstract android.support.v7.app.ActionBar createSupportActionBar();

    protected final android.content.Context getActionBarThemedContext()
    {
        android.support.v7.app.ActionBarActivityDelegate $r0;
        android.content.Context $r1;
        android.support.v7.app.ActionBar $r2;

        $r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        $r1 = $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity>;

        $r2 = virtualinvoke $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar getSupportActionBar()>();

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<android.support.v7.app.ActionBar: android.content.Context getThemedContext()>();

     label1:
        return $r1;
    }

    final android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    {
        android.support.v7.app.ActionBarActivityDelegate $r0;
        android.support.v7.app.ActionBarActivityDelegate$ActionBarDrawableToggleImpl $r1;

        $r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        $r1 = new android.support.v7.app.ActionBarActivityDelegate$ActionBarDrawableToggleImpl;

        specialinvoke $r1.<android.support.v7.app.ActionBarActivityDelegate$ActionBarDrawableToggleImpl: void <init>(android.support.v7.app.ActionBarActivityDelegate,android.support.v7.app.ActionBarActivityDelegate$1)>($r0, null);

        return $r1;
    }

    abstract int getHomeAsUpIndicatorAttrId();

    android.view.MenuInflater getMenuInflater()
    {
        android.support.v7.app.ActionBarActivityDelegate $r0;
        android.view.MenuInflater $r1;
        android.content.Context $r2;
        android.support.v7.internal.view.SupportMenuInflater $r3;

        $r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        $r1 = $r0.<android.support.v7.app.ActionBarActivityDelegate: android.view.MenuInflater mMenuInflater>;

        if $r1 != null goto label1;

        $r3 = new android.support.v7.internal.view.SupportMenuInflater;

        $r2 = virtualinvoke $r0.<android.support.v7.app.ActionBarActivityDelegate: android.content.Context getActionBarThemedContext()>();

        specialinvoke $r3.<android.support.v7.internal.view.SupportMenuInflater: void <init>(android.content.Context)>($r2);

        $r0.<android.support.v7.app.ActionBarActivityDelegate: android.view.MenuInflater mMenuInflater> = $r3;

     label1:
        $r1 = $r0.<android.support.v7.app.ActionBarActivityDelegate: android.view.MenuInflater mMenuInflater>;

        return $r1;
    }

    final android.support.v7.app.ActionBar getSupportActionBar()
    {
        android.support.v7.app.ActionBarActivityDelegate $r0;
        boolean $z0;
        android.support.v7.app.ActionBar $r1;

        $r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        $z0 = $r0.<android.support.v7.app.ActionBarActivityDelegate: boolean mHasActionBar>;

        if $z0 != 0 goto label1;

        $z0 = $r0.<android.support.v7.app.ActionBarActivityDelegate: boolean mOverlayActionBar>;

        if $z0 == 0 goto label3;

     label1:
        $r1 = $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar mActionBar>;

        if $r1 != null goto label2;

        $r1 = virtualinvoke $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar createSupportActionBar()>();

        $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar mActionBar> = $r1;

        $z0 = $r0.<android.support.v7.app.ActionBarActivityDelegate: boolean mEnableDefaultActionBarUp>;

        if $z0 == 0 goto label2;

        $r1 = $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar mActionBar>;

        virtualinvoke $r1.<android.support.v7.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)>(1);

     label2:
        $r1 = $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar mActionBar>;

        return $r1;

     label3:
        $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar mActionBar> = null;

        goto label2;
    }

    protected final java.lang.String getUiOptionsFromMetadata()
    {
        android.support.v7.app.ActionBarActivityDelegate $r0;
        android.content.pm.PackageManager$NameNotFoundException $r1;
        java.lang.String $r2;
        android.support.v7.app.ActionBarActivity $r3;
        android.content.pm.PackageManager $r4;
        android.content.ComponentName $r5;
        android.content.pm.ActivityInfo $r6;
        android.os.Bundle $r7;
        java.lang.StringBuilder $r8;
        java.lang.Class $r9;

        $r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        $r3 = $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity>;

     label1:
        $r4 = virtualinvoke $r3.<android.support.v7.app.ActionBarActivity: android.content.pm.PackageManager getPackageManager()>();

        $r3 = $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity>;

        $r5 = virtualinvoke $r3.<android.support.v7.app.ActionBarActivity: android.content.ComponentName getComponentName()>();

        $r6 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r5, 128);

        $r2 = null;

        $r7 = $r6.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        if $r7 == null goto label2;

        $r7 = $r6.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        $r2 = virtualinvoke $r7.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.support.UI_OPTIONS");

     label2:
        return $r2;

     label3:
        $r1 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getUiOptionsFromMetadata: Activity \'");

        $r3 = $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity>;

        $r9 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' not in manifest");

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ActionBarActivityDelegate", $r2);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    abstract boolean onBackPressed();

    abstract void onConfigurationChanged(android.content.res.Configuration);

    abstract void onContentChanged();

    void onCreate(android.os.Bundle)
    {
        android.support.v7.app.ActionBarActivityDelegate $r0;
        android.os.Bundle $r1;
        android.support.v7.app.ActionBarActivity $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6;
        android.support.v7.app.ActionBar $r7;

        $r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity>;

        $r3 = <android.support.v7.appcompat.R$styleable: int[] ActionBarWindow>;

        $r4 = virtualinvoke $r2.<android.support.v7.app.ActionBarActivity: android.content.res.TypedArray obtainStyledAttributes(int[])>($r3);

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean hasValue(int)>(0);

        if $z0 != 0 goto label1;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You need to use a Theme.AppCompat theme (or descendant) with this activity.");

        throw $r5;

     label1:
        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        $r0.<android.support.v7.app.ActionBarActivityDelegate: boolean mHasActionBar> = $z0;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 0);

        $r0.<android.support.v7.app.ActionBarActivityDelegate: boolean mOverlayActionBar> = $z0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $r2 = $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity>;

        $r6 = staticinvoke <android.support.v4.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)>($r2);

        if $r6 == null goto label2;

        $r7 = $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar mActionBar>;

        if $r7 != null goto label3;

        $r0.<android.support.v7.app.ActionBarActivityDelegate: boolean mEnableDefaultActionBarUp> = 1;

     label2:
        return;

     label3:
        $r7 = $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar mActionBar>;

        virtualinvoke $r7.<android.support.v7.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)>(1);

        goto label2;
    }

    abstract boolean onCreatePanelMenu(int, android.view.Menu);

    abstract android.view.View onCreatePanelView(int);

    abstract boolean onMenuItemSelected(int, android.view.MenuItem);

    abstract void onPostResume();

    boolean onPrepareOptionsPanel(android.view.View, android.view.Menu)
    {
        android.support.v7.app.ActionBarActivityDelegate $r0;
        android.view.View $r1;
        android.view.Menu $r2;
        int $i0;
        boolean $z0;
        android.support.v7.app.ActionBarActivity $r3;

        $r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.Menu;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 16 goto label1;

        $r3 = $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity>;

        $z0 = virtualinvoke $r3.<android.support.v7.app.ActionBarActivity: boolean onPrepareOptionsMenu(android.view.Menu)>($r2);

        return $z0;

     label1:
        $r3 = $r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity>;

        $z0 = virtualinvoke $r3.<android.support.v7.app.ActionBarActivity: boolean superOnPrepareOptionsPanel(android.view.View,android.view.Menu)>($r1, $r2);

        return $z0;
    }

    abstract boolean onPreparePanel(int, android.view.View, android.view.Menu);

    abstract void onStop();

    abstract void onTitleChanged(java.lang.CharSequence);

    abstract void setContentView(int);

    abstract void setContentView(android.view.View);

    abstract void setContentView(android.view.View, android.view.ViewGroup$LayoutParams);

    abstract void setSupportProgress(int);

    abstract void setSupportProgressBarIndeterminate(boolean);

    abstract void setSupportProgressBarIndeterminateVisibility(boolean);

    abstract void setSupportProgressBarVisibility(boolean);

    abstract android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback);

    abstract void supportInvalidateOptionsMenu();

    abstract boolean supportRequestWindowFeature(int);

    public static void <clinit>()
    {
        <android.support.v7.app.ActionBarActivityDelegate: java.lang.String UIOPTION_SPLIT_ACTION_BAR_WHEN_NARROW> = "splitActionBarWhenNarrow";

        <android.support.v7.app.ActionBarActivityDelegate: java.lang.String TAG> = "ActionBarActivityDelegate";

        <android.support.v7.app.ActionBarActivityDelegate: java.lang.String METADATA_UI_OPTIONS> = "android.support.UI_OPTIONS";

        return;
    }
}
