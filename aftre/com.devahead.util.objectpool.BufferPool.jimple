public class com.devahead.util.objectpool.BufferPool extends android.app.Application
{
    private java.util.HashMap pool;

    public void <init>()
    {
        com.devahead.util.objectpool.BufferPool $r0;
        java.util.HashMap $r1;

        $r0 := @this: com.devahead.util.objectpool.BufferPool;

        specialinvoke $r0.<android.app.Application: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r0.<com.devahead.util.objectpool.BufferPool: java.util.HashMap pool> = $r1;

        return;
    }

    public java.lang.Object getObject(java.lang.String)
    {
        com.devahead.util.objectpool.BufferPool $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        com.devahead.util.objectpool.ObjectPool $r4;

        $r0 := @this: com.devahead.util.objectpool.BufferPool;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.devahead.util.objectpool.BufferPool: java.util.HashMap pool>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.devahead.util.objectpool.ObjectPool) $r3;

        $r3 = virtualinvoke $r4.<com.devahead.util.objectpool.ObjectPool: java.lang.Object getObject()>();

        return $r3;
    }

    public boolean isObjInPool(java.lang.String)
    {
        com.devahead.util.objectpool.BufferPool $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.devahead.util.objectpool.ObjectPool $r4;

        $r0 := @this: com.devahead.util.objectpool.BufferPool;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.devahead.util.objectpool.BufferPool: java.util.HashMap pool>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.devahead.util.objectpool.BufferPool: java.util.HashMap pool>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.devahead.util.objectpool.ObjectPool) $r3;

        $z0 = virtualinvoke $r4.<com.devahead.util.objectpool.ObjectPool: boolean hasObject()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void saveObject(java.lang.String, java.lang.Object)
    {
        com.devahead.util.objectpool.BufferPool $r0;
        java.lang.String $r1;
        java.lang.Object $r2, $r5;
        com.devahead.util.objectpool.ObjectPool $r3;
        java.util.HashMap $r4;
        boolean $z0;

        $r0 := @this: com.devahead.util.objectpool.BufferPool;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r4 = $r0.<com.devahead.util.objectpool.BufferPool: java.util.HashMap pool>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r3 = new com.devahead.util.objectpool.ObjectPool;

        specialinvoke $r3.<com.devahead.util.objectpool.ObjectPool: void <init>(int)>(400);

        $r4 = $r0.<com.devahead.util.objectpool.BufferPool: java.util.HashMap pool>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

     label1:
        $r4 = $r0.<com.devahead.util.objectpool.BufferPool: java.util.HashMap pool>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (com.devahead.util.objectpool.ObjectPool) $r5;

        virtualinvoke $r3.<com.devahead.util.objectpool.ObjectPool: void freeObject(java.lang.Object)>($r2);

        return;
    }
}
